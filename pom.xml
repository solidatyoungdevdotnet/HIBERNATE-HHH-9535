<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.hibernate.example</groupId>
	<artifactId>HHH-9535</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0</version>
	<name>HHH-9535</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss.SSS</maven.build.timestamp.format>
		<buildDate>${maven.build.timestamp}</buildDate>
		<buildNumber>${bamboo.buildNumber}</buildNumber>
		<pmd.plugin.version>3.0.1</pmd.plugin.version>
		
 		<version.hibernate-validator>4.2.0.FINAL</version.hibernate-validator>
 		<version.hibernate>4.2.8.Final</version.hibernate>
<!-- 		<version.hibernate>4.3.7.Final</version.hibernate>
 -->
 		<version.jmockit>1.13</version.jmockit>
		<version.maven-surefire-plugin>2.17</version.maven-surefire-plugin>
		<version.maven-checkstyle-plugin>2.12.1</version.maven-checkstyle-plugin>

		<spring.version>4.1.0.RELEASE</spring.version>
		<spring-security.version>3.2.3.RELEASE</spring-security.version>
	</properties>
	

	<dependencies>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.181</version>
			<scope>test</scope>
		</dependency>
		<!-- Override the version of xerces impl pulled in by cobertura only during 
			testing -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.11.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>1.7.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.flexjson</groupId>
			<artifactId>flexjson</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>2.3.7</version>
		</dependency>
		<!-- jmockit MUST appear BEFORE junit in the classpath. -->
		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<version>${version.jmockit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.payspan.finserv.utils</groupId>
			<artifactId>litle_utils</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-dbcp</artifactId>
			<version>7.0.55</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.51</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${version.hibernate}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${version.hibernate}</version>
			<exclusions>
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib</artifactId>
				</exclusion>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${version.hibernate-validator}</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<!-- this is a transitive dependency of litle SDK. We need 4.2.3 to work 
				with Litle SDK but our exchange application relies on 4.0.1 -->
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.7.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>1.9.1.RELEASE</version>
		</dependency>
	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>(2.5.0,)</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.5</version>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<!-- the following is used for Joint compilation so you can mix groovy 
							and java classes together in the same projects. -->
						<compilerId>groovy-eclipse-compiler</compilerId>
						<verbose>true</verbose>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-eclipse-compiler</artifactId>
							<version>2.7.0-01</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
					<version>${version.maven-surefire-plugin}</version> <configuration> <reuseForks>false</reuseForks> 
					<forkCount>1</forkCount> <threadCount>1</threadCount> <jvm>/usr/bin/java</jvm> 
					<includes> <include>**/*Test.java</include> </includes> <excludes> <exclude> 
					**/*IntegrationTest.java </exclude> <exclude> **/*DONOTRUN*Test.java </exclude> 
					</excludes> </configuration> </plugin> -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
					<configuration>
                        <forkCount>1</forkCount>
                        <excludes>
                            <exclude>**/*IntegrationTest.java</exclude>
                        </excludes>
						<reuseForks>false</reuseForks>
						<argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
						<systemPropertyVariables>
							<databaseSchema>MY_TEST_SCHEMA_${surefire.forkNumber}</databaseSchema>
						</systemPropertyVariables>
						<parallel></parallel>
						<threadCount>1</threadCount>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>
								**/*IntegrationTest.java
							</exclude>
							<exclude>
								**/*DONOTRUN*Test.java
							</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.7</version>
					<!-- Note 2.8 does not work with AspectJ aspect path -->
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>false</downloadJavadocs>
						<wtpversion>2.0</wtpversion>
						<!-- <additionalBuildcommands> <buildCommand> <name>org.eclipse.ajdt.core.ajbuilder</name> 
							<arguments> <aspectPath>org.springframework.aspects</aspectPath> </arguments> 
							</buildCommand> <buildCommand> <name>org.springframework.ide.eclipse.core.springbuilder</name> 
							</buildCommand> </additionalBuildcommands> -->
						<additionalProjectnatures>
							<!-- <projectnature>org.eclipse.ajdt.ui.ajnature</projectnature> <projectnature>com.springsource.sts.roo.core.nature</projectnature> -->
							<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						</additionalProjectnatures>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<!-- <version>${plugin.maven-site.version}</version> -->
					<dependencies>
						<!-- <dependency>add support for ssh/scp <groupId>org.apache.maven.wagon</groupId> 
							<artifactId>wagon-ssh</artifactId> <version>${plugin.wagon-ssh.version}</version> 
							</dependency> -->
					</dependencies>
					<configuration>
						<attach>true</attach>
						<reportPlugins>
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-project-info-reports-plugin</artifactId>
								<version>2.2</version>
								<reports>
									<report>index</report>
									<report>summary</report>
								</reports>
							</plugin>
							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>findbugs-maven-plugin</artifactId>
								<!-- <version>2.3.3</version> <configuration> findbugs:help -Ddetail=true 
									for outputDirectory: Location where generated html will be created. <outputDirectory>${project.build.directory}/findbugs</outputDirectory> 
									<xmlOutput>true</xmlOutput> <findbugsXmlWithMessages>true</findbugsXmlWithMessages> 
									<xmlOutputDirectory>target/findbugs</xmlOutputDirectory> <failOnError>false</failOnError> 
									</configuration> -->
							</plugin>
							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>findbugs-maven-plugin</artifactId>

							</plugin>
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-checkstyle-plugin</artifactId>
							</plugin>
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-pmd-plugin</artifactId>
								<version>${pmd.plugin.version}</version>
							</plugin>
							<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> 
								<version>2.6</version> <configuration> <forkCount>0</forkCount> <useFile>false</useFile> 
								<argLine>-Xmx512m</argLine> <systemProperties> <property> <name>generateReport</name> 
								<value>html</value> </property> </systemProperties> <includes> <include>**/*Test.java</include> 
								</includes> <excludes> <exclude>com/payspan/finserv/ms/entity/*</exclude> 
								<exclude> **/*IntegrationTest.java </exclude> <exclude> **/*DONOTRUN*Test.java 
								</exclude> </excludes> </configuration> </plugin> -->
							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>cobertura-maven-plugin</artifactId>
								<version>2.6</version>
								<configuration>

									<formats>
										<format>html</format>
										<format>xml</format>
									</formats>
									<instrumentation>
										<includes>
											<include>**/*Test.java</include>
											<include>**/*TestCase.java</include>
											<include>**/*TestSuite.java</include>
										</includes>
										<excludes>
											<exclude>
												**/*IntegrationTest.java
											</exclude>
											<exclude>
												**/*DONOTRUN*Test.java
											</exclude>
											<exclude>
												**/Abstract*Test.java
											</exclude>
											<exclude>
												**/*Abstract*Test.java
											</exclude>
										</excludes>
									</instrumentation>
								</configuration>
							</plugin>
						</reportPlugins>
						<attach>true</attach>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.12.1,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
